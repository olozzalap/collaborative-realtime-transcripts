{"version":3,"sources":["svg/times-circle-solid.svg","components/ConversationList.jsx","components/Editor.jsx","components/TopBar.jsx","pages/CRTPage.jsx","reportWebVitals.js","index.js"],"names":["module","exports","StyledConvoCard","styled","div","StyledDeleteIcon","svg","StyledCreateIcon","ConversationList","author","setSelectedConversation","useState","allConvos","setAllConvos","newConvoTitle","setNewConvoTitle","useEffect","fetchAllConvos","a","fetch","allConvosRes","json","allConvosJson","length","console","warn","deleteConvo","e","id","preventDefault","stopPropagation","method","body","JSON","stringify","headers","resp","ok","newConvos","filter","convo","error","msg","createConvo","newConvo","newConversation","text","_id","className","map","onClick","title","focusable","data-prefix","data-icon","role","xmlns","viewBox","fill","d","Date","createdAt","toLocaleDateString","lastMutationAt","originState","slice","onChange","target","value","placeholder","renderCount","StyledCloseIcon","StyledEditorInput","textarea","Editor","conversation","displayValue","setDisplayValue","parse","apiOrigin","setApiOrigin","apiConvoText","useRef","inputRef","debounceTimer","mutationState","cursorIndex","isInsert","newText","current","submitMutation","clearTimeout","setTimeout","formData","FormData","append","Object","fromEntries","entries","newIndex","newCursorIndex","selectionStart","setSelectionRange","origin","aria-label","class","newMutationIsInsert","selectionEnd","ref","type","TopBar","setAuthor","newAuthorText","setNewAuthorText","defaultAuthors","CRTPage","Math","floor","random","selectedConversation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87fab02e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/times-circle-solid.f2d68558.svg\";","import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledConvoCard = styled.div`\n    cursor: pointer;\n    transition: 300ms;\n    &:hover {\n        background-color: rgba(215, 210, 239, .5);\n    }\n`;\nconst StyledDeleteIcon = styled.svg`\n    min-width: 16px;\n    max-width: 16px;\n    transition: 300ms;\n    &:hover {\n        color: rgb(224, 45, 109);\n    }\n`;\nconst StyledCreateIcon = styled.svg`\n    min-width: 64px;\n    max-width: 64px;\n    padding: 32px 0;\n    transition: 300ms;\n    &:hover {\n        color: rgb(65, 125, 219);\n    }\n`;\n\nconst ConversationList = ({\n    author,\n    setSelectedConversation,\n}) => {\n    const [allConvos, setAllConvos] = useState([]);\n    const [newConvoTitle, setNewConvoTitle] = useState('');\n\n    useEffect(() => {\n        const fetchAllConvos = async () => {\n            const allConvosRes = await fetch('/conversations');\n            const allConvosJson = await allConvosRes.json();\n            setAllConvos(allConvosJson)\n        };\n        if (!allConvos?.length) {\n            fetchAllConvos();\n        }\n    }, []);\n\n    console.warn(allConvos)\n\n    const deleteConvo = async (e, id) => {\n        console.warn(`\n            deleteConvo\n            `)\n        e.preventDefault();\n        e.stopPropagation();\n\n        const resp = await fetch('/conversations', {\n            method: 'DELETE',\n            body: JSON.stringify({ \"id\": id }),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n        const json = await resp.json();\n\n        // success\n        if (json?.ok) {\n            const newConvos = allConvos.filter((convo) => {\n                return convo.id !== id\n            });\n            setAllConvos(newConvos);\n        } else {\n            console.error (json?.msg)\n        }\n    }\n\n    const createConvo = async () => {\n        console.warn(`\n            createConvo\n            `)\n\n        const resp = await fetch('/conversations', {\n            method: 'POST',\n            body: JSON.stringify({ \"author\": author, \"title\": newConvoTitle }),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        });\n        const json = await resp.json();\n\n        // success\n        if (json?.ok) {\n            // const newConvos = allConvos.filter((convo) => {\n            //     return convo.id !== id\n            // });\n            const newConvo = json?.newConversation;\n            newConvo.text = json?.text;\n            newConvo.id = newConvo._id;\n\n            setAllConvos([\n                ...allConvos,\n                newConvo\n            ]);\n\n            setNewConvoTitle('')\n        } else {\n            console.error (json?.msg)\n        }\n    }\n\n\n    return (\n        <main className=\"ConversationList row m-3\">\n            {allConvos.map( (convo) => (\n                <div className=\"col-md-4 col-sm-6 col-12 pb-3\">\n                    <StyledConvoCard className=\"card\" onClick={() => setSelectedConversation(convo)}>\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title d-flex justify-content-between\">\n                                <span>{convo.title}</span>\n                                <StyledDeleteIcon onClick={(e) => deleteConvo(e, convo.id)} focusable=\"false\" data-prefix=\"fas\" data-icon=\"trash-alt\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"></path></StyledDeleteIcon>\n                            </h3>\n                            <p className=\"card-text\">createdAt: {new Date(convo.createdAt).toLocaleDateString()}</p>\n                            <p className=\"card-text\">lastMutationAt: {new Date(convo.lastMutationAt).toLocaleDateString()}</p>\n                            <p className=\"card-text\">originState | {JSON.stringify(convo?.originState)}</p>\n                            <h6 className=\"card-subtitle my-2 text-muted\">\n                                \"{convo?.text?.slice(0, 100)}\"\n                            </h6>\n                        </div>\n                    </StyledConvoCard>\n                </div>\n            ))}\n            <div className=\"col-md-4 col-sm-6 col-12\">\n                <StyledConvoCard className=\"card\">\n                    <h3 className=\"card-title d-flex justify-content-center\">\n                        New transcript?\n                    </h3>\n\n                    <label className=\"card-text d-flex justify-content-around\">\n                        Title: \n                        <input\n                            onChange={(e) => setNewConvoTitle(e.target.value)}\n                            placeholder=\"Title\"\n                            value={newConvoTitle}\n                        />\n                    </label>\n\n                    <div className=\"d-flex justify-content-center\">\n                        <StyledCreateIcon onClick={createConvo} focusable=\"false\" data-prefix=\"fas\" data-icon=\"plus-circle\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\"></path></StyledCreateIcon>\n                    </div>\n                </StyledConvoCard>\n            </div>\n        </main>\n    );\n}\n\nexport default ConversationList;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from '@emotion/styled';\nimport timesIcon from '../svg/times-circle-solid.svg';\n\nconst debounceTimeMs = 700;\nlet renderCount = 0;\n\nconst StyledCloseIcon = styled.svg`\n    width: 40px;\n    cursor: pointer;\n`;\nconst StyledEditorInput = styled.textarea`\n    margin: 24px;\n    width: 100%;\n    max-width: 800px;\n    height: 360px;\n    max-height: 100%;\n`;\n\nconst Editor = ({\n    author,\n    conversation,\n    setSelectedConversation,\n}) => {\n    const [displayValue, setDisplayValue] = useState(conversation?.text);\n    const [apiOrigin, setApiOrigin] = useState(JSON.parse(conversation?.originState));\n    const apiConvoText = useRef(conversation?.text);\n    const inputRef = useRef(null);\n    const debounceTimer = useRef(null);\n    const mutationState = useRef({\n        cursorIndex: null,\n        isInsert: null,\n        length: 0,\n        newText: '',\n    });\n    const {\n        cursorIndex,\n        isInsert,\n        length,\n        newText,\n    } = mutationState.current;\n\n    const handleChange = (e) => {\n        const value = e.target.value;\n        const newMutationIsInsert = value.length > apiConvoText.current.length;\n\n        if (!mutationState.current.cursorIndex) {\n            mutationState.current.cursorIndex = newMutationIsInsert ? e?.target?.selectionStart - 1 : e?.target?.selectionEnd;\n            console.warn(`\n                set mutationState.current.cursorIndex is: ${mutationState.current.cursorIndex}\n                `)\n        }\n\n        console.warn(`\n            handleChange\n            value is: ${value}\n            apiConvoText.current.length is: ${apiConvoText.current.length}\n            e?.target?.selectionStart is: ${e?.target?.selectionStart}\n            cursorIndex is: ${mutationState.current.cursorIndex}\n            newMutationIsInsert is: ${newMutationIsInsert}\n            value.length - apiConvoText.current.length is: ${value.length - apiConvoText.current.length}\n        `)\n        // isInsert: true\n        if (newMutationIsInsert) {\n            mutationState.current.isInsert = true;\n            mutationState.current.length = value.length - apiConvoText.current.length;\n            mutationState.current.newText = value.slice(mutationState.current.cursorIndex, mutationState.current.cursorIndex + mutationState.current.length);\n        } else {\n            mutationState.current.isInsert = false;\n            mutationState.current.length = apiConvoText.current.length - value.length;\n            mutationState.current.newText = '';\n        }\n\n        setDisplayValue(value);\n        submitMutation();\n    }\n    const submitMutation = async () => {\n        // Debounce mutation api submission\n        clearTimeout(debounceTimer.current);\n        debounceTimer.current = setTimeout(async () => {\n            console.warn(`\n                debounced post!\n                cursorIndex is: ${mutationState.current.cursorIndex}\n                mutationState is: \n                `)\n            console.warn(JSON.stringify(mutationState.current))\n\n            const formData = new FormData();\n            formData.append('conversationId', conversation?.id);\n            formData.append('author', author);\n            formData.append('index', mutationState.current.isInsert ? mutationState.current.cursorIndex : mutationState.current.cursorIndex);\n            formData.append('type', mutationState.current.isInsert ? 'insert' : 'delete');\n            formData.append('length', mutationState.current.length);\n            formData.append('text', mutationState.current.newText);\n            formData.append('origin', JSON.stringify(apiOrigin));\n\n            const resp = await fetch('/mutations', {\n                method: 'POST',\n                body: JSON.stringify(Object.fromEntries(formData.entries())),\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n            });\n            const json = await resp.json();\n\n            // success\n            if (json?.ok) {\n                apiConvoText.current = json?.text;\n\n                if (json?.newIndex !== mutationState.current.cursorIndex) {\n                    const newCursorIndex = inputRef?.current?.selectionStart + (json?.newIndex - mutationState.current.cursorIndex);\n                    console.warn(`\n                        mutationState.current.cursorIndex is: ${mutationState.current.cursorIndex}\n                        inputRef?.current?.selectionStart is: ${inputRef?.current?.selectionStart}\n                         newCursorIndex is: ${newCursorIndex}\n                         `)\n                    // eslint-disable-next-line no-unused-expressions\n                    inputRef?.current?.setSelectionRange(newCursorIndex, newCursorIndex);\n\n                    mutationState.current = {\n                        cursorIndex: null,\n                        isInsert: null,\n                        length: 0,\n                        newText: '',\n                    };\n                }\n\n\n                setApiOrigin(json?.origin);\n            } else {\n                console.error (json?.msg)\n            }\n        }, debounceTimeMs);\n    }\n\n    renderCount++;\n    console.warn(`\n        Render #${renderCount}\n        apiOrigin is: ${apiOrigin}\n    `)\n\n    return (\n        <div>\n            <div className=\"d-flex justify-content-around align-items-center\">\n                <div>\n                    Origin: {JSON.stringify(apiOrigin)}\n                </div>\n                <div onClick={() => setSelectedConversation(null)}>\n                    <StyledCloseIcon focusable=\"false\" data-prefix=\"fas\" data-icon=\"times-circle\" className=\"text-warning\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z\"></path></StyledCloseIcon>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <StyledEditorInput\n                    aria-label=\"Conversation Editor\"\n                    class=\"p-2\"\n                    placeholder=\"Conversation Editor\"\n                    onChange={handleChange}\n                    ref={inputRef}\n                    type=\"text\"\n                    value={displayValue}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Editor;\n","import React, { useEffect, useState } from 'react';\n\n\nconst TopBar = ({\n    author,\n    setAuthor,\n}) => {\n    const [newAuthorText, setNewAuthorText] = useState(author);\n\n    return (\n        <header className=\"bg-secondary text-white d-flex align-items-center justify-content-around\">\n            <div className=\"d-flex align-items-center p-2\">\n                <label>\n                    Author: \n                </label>\n                <input\n                    aria-label=\"Author\"\n                    class=\"form-control mx-2\"\n                    placeholder=\"Author\"\n                    onChange={e => setNewAuthorText(e?.target?.value)}\n                    type=\"text\"\n                    value={newAuthorText}\n                />\n                <button\n                    type=\"button\"\n                    class=\"btn btn-success\"\n                    onClick={setAuthor(newAuthorText)}\n                >\n                    Update\n                </button>\n            </div>\n            <h1 className=\"p-2\">\n                C.R.T. 📺\n            </h1>\n        </header>\n    );\n}\n\nexport default TopBar;\n","import React, { useEffect, useState } from 'react';\nimport ConversationList from '../components/ConversationList';\nimport Editor from '../components/Editor';\nimport TopBar from '../components/TopBar';\n\nconst defaultAuthors = ['Bob', 'Alice'];\n\nconst CRTPage = () => {\n    // Initially set a random author from defaultAuthors, user can change this\n    const [author, setAuthor] = useState(defaultAuthors[Math.floor(Math.random() * defaultAuthors.length)]);\n    const [selectedConversation, setSelectedConversation] = useState(null);\n\n    return (\n        <main id=\"CRTPage\">\n            <TopBar \n                author={author}\n                setAuthor={setAuthor}\n            />\n            {selectedConversation ? \n                <Editor\n                    author={author}\n                    conversation={selectedConversation}\n                    setSelectedConversation={setSelectedConversation}\n                /> :\n                <ConversationList\n                    author={author}\n                    setSelectedConversation={setSelectedConversation}\n                />\n            }\n        </main>\n    );\n}\n\nexport default CRTPage;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CRTPage from './pages/CRTPage';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <CRTPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}